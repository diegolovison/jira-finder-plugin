<!--
The MIT License

Copyright (c) 2004-2010, Sun Microsystems, Inc., Kohsuke Kawaguchi,
id:cactusman, Tom Huybrechts, Yahoo!, Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson/test" xmlns:f="/lib/form">
  <j:set var="jirafaObject" value="${app.pluginManager.uberClassLoader.loadClass('org.jenkinsci.plugins.jirafa.controller.ExtendedMetaTabulatedResult').getMethod('newInstance', null).invoke(null, null)}" />
  ${jirafaObject.initMetaTabulatedResult(it)}
  <st:bind var="ajaxJirafa" value="${jirafaObject}"/>

  <script>
    function linkIssuesToTest(identifier) {
      var issuesToLink = new Array();
      var inputElements = document.getElementsByName(identifier + '-issue[]');
      var test = document.getElementById(identifier + '-link-submit').dataset.test;
      var stacktrace = document.getElementById(identifier + '-link-submit').dataset.stacktrace;
      for(var i = 0; inputElements[i]; ++i){
        if(inputElements[i].checked){
          issuesToLink.push(inputElements[i].value);
        }
      }

      ajaxJirafa.linkIssuesToTest(test, issuesToLink, stacktrace, function (t) {
        location.reload(true);
      });
    }

    function deleteLinks(identifier) {
      var linksToDelete = new Array();
      var inputElements = document.getElementsByName(identifier + '-link[]');
      for(var i = 0; inputElements[i]; ++i){
        if(inputElements[i].checked){
          linksToDelete.push(inputElements[i].value);
        }
      }

      ajaxJirafa.deleteLinks(linksToDelete, function (t) {
        location.reload(true);
      });
    }

    function linkIssuesToAll() {
      var tests = new Array();
      var issueKeys = new Array();

      var boxes = document.getElementsByClassName('jirafa-box');
      for(var i = 0; boxes[i]; ++i) {
        var box = boxes[i];
        var boxId = box.id;

        var submitButton = document.getElementById(boxId + '-link-submit');
        if (submitButton == null) {
          continue;
        }

        var test = submitButton.dataset.test;
        tests.push(test);

        var issueKeysForTest = new Array();

        var inputElements = document.getElementsByName(boxId + '-issue[]');
        for(var j = 0; inputElements[j]; ++j){
          if(inputElements[j].checked){
            issueKeysForTest.push(inputElements[j].value);
          }
        }
        issueKeys.push(issueKeysForTest);
      }

      ajaxJirafa.linkIssuesToAll(tests, issueKeys, function (t) {
        location.reload(true);
      });
    }

    function deleteLinksFromAll() {
      var linksToDelete = new Array();
      var inputElements = document.getElementsByClassName('linkDeleteCheckbox');

      for(var i = 0; inputElements[i]; ++i){
        if(inputElements[i].checked){
        linksToDelete.push(inputElements[i].value);
        }
      }

      ajaxJirafa.deleteLinks(linksToDelete, function (t) {
        location.reload(true);
      });
    }

    function showAllBoxes(parentBox) {
      var parentElement = document.getElementById(parentBox);

      var showLink = document.getElementById(parentBox + '-show-all');
      var hideLink = document.getElementById(parentBox + '-hide-all');
      showLink.style.display = 'none';
      hideLink.style.display = 'inline';

      var buttons = parentElement.getElementsByClassName('test-showlink');
      for(var i = 0; buttons[i]; ++i) {
        if (!isHidden(buttons[i])) {
          buttons[i].click();
        }
      }

      return false;
    }

    function hideAllBoxes(parentBox) {
      var parentElement = document.getElementById(parentBox);

      var showLink = document.getElementById(parentBox + '-show-all');
      var hideLink = document.getElementById(parentBox + '-hide-all');
      showLink.style.display = 'inline';
      hideLink.style.display = 'none';

      var buttons = parentElement.getElementsByClassName('test-hidelink');
      for(var i = 0; buttons[i]; ++i) {
        if (!isHidden(buttons[i])) {
          buttons[i].click();
        }
      }

      return false;
    }

    function isHidden(el) {
      return (el.offsetParent === null)
    }
  </script>

  <j:if test="${it.failCount!=0}">

    <h2>${%Unknown failures - failed tests with no issue linked}</h2>

    <div id="unknown-failures">

      Jirafa operations:
      <a href="#" onclick="linkIssuesToAll(); return false;">Link selected issues for all tests</a><st:nbsp />
      <a href="#" id="unknown-failures-show-all" onclick="showAllBoxes('unknown-failures'); return false;">Show all found issues</a><st:nbsp />
      <a href="#" id="unknown-failures-hide-all" onclick="hideAllBoxes('unknown-failures'); return false;" style="display: none">Hide all found issues</a><st:nbsp />

      <table class="pane sortable bigtable">
        <tr>
          <td class="pane-header">${%Test Name}</td>
          <td class="pane-header" style="width:4em">${%Duration}</td>
          <td class="pane-header" style="width:3em">${%Age}</td>
        </tr>
        <j:forEach var="f" items="${it.failedTests}" varStatus="i">
          <j:if test="${jirafaObject.testsWithLinks.get(f.fullDisplayName) == null}" >
            <tr>
              <td class="pane no-wrap">
                <t:failed-test result="${f}" url="${f.getRelativePathFrom(it)}"/>
              </td>
              <td class="pane no-wrap" style="text-align:right;" data="${f.duration}">
                ${f.durationString}
              </td>
              <td class="pane" style="text-align:right;">
                <a href="${rootURL}/${f.failedSinceRun.url}" class="model-link inside">${f.age}</a>
              </td>
            </tr>
          </j:if>
        </j:forEach>
      </table>
    </div>

    <h2>${%Known failures - failed tests with linked issues}</h2>

    <div id="known-failures">

    Jirafa operations:
    <a href="#" onclick="deleteLinksFromAll(); return false;">Delete selected links for all tests</a><st:nbsp />
    <a href="#" id="known-failures-show-all" onclick="showAllBoxes('known-failures'); return false;">Show all linked issues</a><st:nbsp />
    <a href="#" id="known-failures-hide-all" onclick="hideAllBoxes('known-failures'); return false;" style="display: none">Hide all linked issues</a><st:nbsp />

    <table class="pane sortable bigtable">
      <tr>
        <td class="pane-header">${%Test Name}</td>
        <td class="pane-header" style="width:4em">${%Duration}</td>
        <td class="pane-header" style="width:3em">${%Age}</td>
      </tr>
      <j:forEach var="f" items="${it.failedTests}" varStatus="i">
        <j:if test="${jirafaObject.testsWithLinks.get(f.fullDisplayName) != null}" >
          <tr>
            <td class="pane no-wrap"><t:failed-test result="${f}" url="${f.getRelativePathFrom(it)}"/></td>
            <td class="pane no-wrap" style="text-align:right;" data="${f.duration}">
              ${f.durationString}
            </td>
            <td class="pane" style="text-align:right;">
              <a href="${rootURL}/${f.failedSinceRun.url}" class="model-link inside">${f.age}</a>
            </td>
          </tr>
        </j:if>
      </j:forEach>
    </table>
    </div>

  </j:if>


  <j:if test="${it.totalCount!=0}">
    <h2>${%All Tests}</h2>
    <table class="pane sortable bigtable" id="testresult">
      <tr>
        <td class="pane-header">${it.childTitle}</td>
        <td class="pane-header" style="width:5em">${%Duration}</td>
        <td class="pane-header" style="width:5em">${%Fail}</td>
        <td class="pane-header" style="width:1em; font-size:smaller; white-space:nowrap;">(${%diff})</td>
        <td class="pane-header" style="width:5em">${%Skip}</td>
        <td class="pane-header" style="width:1em; font-size:smaller; white-space:nowrap;">(${%diff})</td>
        <td class="pane-header" style="width:5em">${%Pass}</td>
        <td class="pane-header" style="width:1em; font-size:smaller; white-space:nowrap;">(${%diff})</td>
        <td class="pane-header" style="width:5em">${%Total}</td>
        <td class="pane-header" style="width:1em; font-size:smaller; white-space:nowrap;">(${%diff})</td>
      </tr>
      <tbody>
        <j:set var="prevAll" value="${it.previousResult}" />
        <j:forEach var="p" items="${it.children}">
          <j:set var="prev" value="${prevAll.findCorrespondingResult(p.id)}" />
          <tr>
            <td class="pane">
              <a href="${p.safeName}/" class="model-link inside"><span style="${prev==null?'font-weight:bold':''}"><st:out value="${p.displayName}" /></span></a>
              <j:forEach var="badge" items="${p.testActions}">
                <st:include it="${badge}" page="badge.jelly" optional="true"/>
              </j:forEach>
            </td>
            <td class="pane no-wrap" style="text-align:right" data="${p.duration}">${p.durationString}</td>
            <td class="pane" style="text-align:right">${p.failCount}</td>
            <td class="pane" style="text-align:right" data="${p.failCount-prev.failCount}">
              ${h.getDiffString2(p.failCount-prev.failCount)}
            </td>
            <td class="pane" style="text-align:right">${p.skipCount}</td>
            <td class="pane" style="text-align:right" data="${p.skipCount-prev.skipCount}">
              ${h.getDiffString2(p.skipCount-prev.skipCount)}
            </td>
            <td class="pane" style="text-align:right">${p.passCount}</td>
            <td class="pane" style="text-align:right">
              ${h.getDiffString2(p.passCount-prev.passCount)}
            </td>
            <td class="pane" style="text-align:right">${p.totalCount}</td>
            <td class="pane" style="text-align:right" data="${p.totalCount-prev.totalCount}">
              ${h.getDiffString2(p.totalCount-prev.totalCount)}
            </td>
          </tr>
        </j:forEach>
      </tbody>
    </table>
  </j:if>
</j:jelly>
